---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ .Chart.Name }}-grafana-data"
  namespace: {{ .Release.Namespace }}
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-grafana"
  namespace: {{ .Release.Namespace }}
  labels:
    app: "{{ .Chart.Name }}-grafana"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}-grafana"
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}-grafana"
    spec:
      containers:
      - name: grafana
        image: "{{ .Values.grafana.image }}"
        volumeMounts:
          - name: "{{ .Chart.Name }}-grafana-data"
            mountPath: /var/lib/grafana
        ports:
        - containerPort: 3000
          name: http
      volumes:
        - name: "{{ .Chart.Name }}-grafana-data"
          persistentVolumeClaim:
            claimName: "{{ .Chart.Name }}-grafana-data"
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 472

---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Chart.Name }}-grafana"
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: "{{ .Chart.Name }}-grafana"
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: "{{ .Chart.Name }}-grafana"
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`{{ .Values.grafana.hostname }}`)
      services:
        - kind: Service
          name: "{{ .Chart.Name }}-grafana"
          port: 3000
